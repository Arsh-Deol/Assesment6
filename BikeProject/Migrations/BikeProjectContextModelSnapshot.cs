// <auto-generated />
using System;
using BikeProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BikeProject.Migrations
{
    [DbContext(typeof(BikeProjectContext))]
    partial class BikeProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BikeProject.Models.Banch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CloseingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OpeningTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BranchID");

                    b.ToTable("Banch");
                });

            modelBuilder.Entity("BikeProject.Models.BikeSale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BanchID")
                        .HasColumnType("int");

                    b.Property<int>("PurchaserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BanchID");

                    b.HasIndex("PurchaserID");

                    b.ToTable("BikeSale");
                });

            modelBuilder.Entity("BikeProject.Models.Purchaser", b =>
                {
                    b.Property<int>("PurchaserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaserID");

                    b.ToTable("Purchaser");
                });

            modelBuilder.Entity("BikeProject.Models.SaleMan", b =>
                {
                    b.Property<int>("SaleManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BikeAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaleManName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SaleManId");

                    b.ToTable("SaleMan");
                });

            modelBuilder.Entity("BikeProject.Models.BikeSale", b =>
                {
                    b.HasOne("BikeProject.Models.Banch", "Banch")
                        .WithMany()
                        .HasForeignKey("BanchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeProject.Models.Purchaser", "Purchaser")
                        .WithMany()
                        .HasForeignKey("PurchaserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
